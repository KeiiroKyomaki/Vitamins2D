{
    "title": "Advanced",
    "t_order": "Processing order",
    "p_toptobot": "Vitamins process all params from top to bottom once per frame and always finish one before start the next.",
    "p_adjust": "You can adjust the processing order by manually sorting the params cards by holding 'shift' and dragging them.",
    "t_ref": "Reference to other param's results",
    "p_objref": "In Vitamins, an object 'ref' stores the results of all params' result. You can use 'ref.' plus a param's name to get its result.",
    "p_note": "Note that 'ref' is affected by the processing order; if you call a param before it has been processed, the fetched result will be from the last frame.",
    "p_however": "However, it is also possible to use this feature to ref get the value of the previous frame for calculation yourself.",
    "p_119": "Inside the example video, the current value is mixed with the last frame in a ratio of 1:19 to give a body transition effect. Increasing or decreasing the ratio will result in different degrees.",
    "t_storage": "Storage variables",
    "p_class": "Each Param is a separate class within Vitamins, so you can use the class properties to store variables between each frame.",
    "p_count": "If you need to count how much times a param has been processed, you can declare and access a class property with 'this.count'. To avoid initializing 'count' every frame, you can check whether 'this.count' is equal to 'undefined' before change the value.",
    "t_vplugin": "vPlugin",
    "p_builtin": "Vitamins has several built-in shortcuts in the form of plugins, which currently include:",
    "li_vts": "vPlugin.vts, which is used to get the parameters inside vtube studio.",
    "li_sods": "vPlugin.SecondOrderSystem, which is for building and computing second-order systems",
    "p_next": "Examples will be in the next section 'Examples'.",
    "t_usevts": "Use of VTS parameters",
    "p_fetch": "By enabling the 'fetch VTS parameters data' option in the settings, you will be able to use the values of the VTS input parameters in the vitamins param editor.",
    "p_access": "You can access default parameters built in VTS and custom parameters added by Vitamins or other plugins via vPlugin.vts.defaultParamâ€œ and vPlugin.vts.customParam"
}