{
    "intro": {
        "title": "快速介绍",
        "t_why": "为什么使用Vitamins",
        "t_overview": "概述",
        "VBpioneered": "VBridger开创了用户自定义输入参数的先河，但同时暴露出了很多问题，其中最核心问题是，参数的开发者不能很好的融入现有的模型师与演员俩位一体的开发模式中。",
        "currentDev": "在现在的模式下，参数开发者的职责经常由模型师同时承担。这样确实可行，但是这背后的学习成本是极大的。可能会有相当长的时间都停留在最浅显的应用上，,因为这并不是模型师的擅长领域。",
        "typically": "通常Live2d渲染软件将原始的blendshapes数据计算合并成模型的输入参数，在配置模型时或之后再供用户校准和使用。",
        "uncertainRange": "这种处理方法下，因为个体差异，参与计算的blendshapes的实际范围是完全未知的，计算中各项的实际的比例与设计时的比例可能出现较大差距，这个比例差距是无法通过后续的校准修复的，这就导致了一个无法调和的不确定性。并且，计算的过程越复杂，这个问题的影响就越大。",
        "wrapbefore": "因此，传统的“合并计算后再校准”这一处理办法下，对于运用到多个输入参的参数，是无法做的通用且高精度的。为了满足复杂参数的需求，开发人员只能无奈的为每个委托方量身定制。",
        "dividCali": "为了解决上述俩个问题，Vitamins将校准提前到计算之前，使用前处理将校准结果标准化，每个人传递给计算的数值都有着实际固定的极值与默认值。",
        "reduceUncert": "这将极大的减少开发中的不确定性，让各个开发角色独立的专注在自己的工作内容上，不必担忧对其他角色的适配问题，实现模型师和脚本开发者的分离。",
        "scriptDevOnly": "参数脚本开发者只需要开发脚本本身",
        "riggerDevOnly": "建模师只需要像往常一样建模、使用已经完成的参数存档，在VTS内绑定参数。",
        "reduceCrossover": "这样的工作模式可以极大的减小各个角色间职责的交叉，减少对其他领域的专业知识的需求。还可以借此创造出相当通用的参数存档、Live2d模型、挂件等。",
        "simpliTransfer": "甚至对于模型师-演员的交接，也会起到相当程度的简化作用：模型师在开发时需要在VTS内完成参数的绑定、调试，以确保模型工作正常。按传统的方式，交接给演员后，演员需要在VTS内对模型进行二次调试才可以保证使用质量。",
        "directlyPass": "二次模型调试在使用Vitamins的环境下是可以大幅省略的。经过校准，这俩个人输入给参数计算的实际数值范围是相同的，所以输出的结果的范围也是相同的。除了对'如何变化'相当敏感的嘴型、嘴开闭的这类参数外，其他的模型参数都不再需要二次调试，可以直接使用。",
        "t_advanofVita": "Vitamins的优势：",
        "t_stand": "更高精度且标准化的校准",
        "bq_descBlendshape": "blendshape 在这里可以理解为表示表情程度的数值，它的范围是【0，1】.",
        "t_advan": "Vitamins的校准有以下优点：",
        "li_lowhigh": "低难度，高效率",
        "p_lowhigh": "Vitamins的校准专注在个人的脸。不需要同时校准模型，将校准操作与目标变的相当简单且直观。",
        "fastway": "在大部分输入参数的校准上，用户只需要调整一个数值。同时Vitamins提供了3种输入方式。在最快的方式下，用户只需要：做表情，点击。就可以完成一个参数的校准。",
        "li_highacc": "高精度",
        "usearkit": "使用arkit 标准，将校准对象精细到最原始的表情数值。",
        "compares": "相比于其他软件常用的模式，这样可以有效避免上面图标中表示的，’对预包装的参数执行校准，反而会扩大个体差异的影响‘ 这个问题。",
        "li_standresult": "标准化的校准结果",
        "fixedExtreme": "校准的结果固定为相同的极值和默认值（零点）。",
        "sharethesame": "建模师、脚本开发者、演员，同享一个数值范围，这会使得在开发、交接、使用中不确定性大幅的减小。",
        "bq_colour": "范围的相同并不意味着个人色彩的消失。虽然范围是一致的，但是因为脸部肌肉，表情习惯的不同，数值在范围间如何变化，仍然是由演员本人决定的。",
        "li_reuse": "高复用性",
        "notneedRecali": "演员无需对每个模型进行单独的校准。",
        "afterfirst": "对于同一个人和设备，只要环境不发生较大变化，只需完成一次校准即可使用任意以Vitamins使用的数值标准建立的Live2d模型、挂件，Vitamins存档等。",
        "powerfulEditor": "强大的参数脚本编辑器",
        "vbcompress": "VBridger可能是为了降低使用难度，将参数的编辑压缩为了表达式，这其实很大程度的降低了参数自定义所能达到的上限。",
        "vitaminsEditor": "Vitamins的参数编辑器进一步的允许用户在表达式模式和编程模式间切换。",
        "expOrCode": "你可以使用表达式形式的编辑模式完成单行表达的数学计算。或者使用编程模式，对数据进行更加强大且多样化的处理",
        "link_drink_straw": "用吸管喝水",
        "VTS_model_config": "VTS模型设置",
        "detail": "细节",
        "kchangenothing": "校准并不能改变比例差距"
    },
    "t_download": "下载与安装",
    "instal": {
        "t_down": "下载",
        "p_down": "目前，你可以从github的release页面下载Vtiamins。",
        "title": "安装",
        "p2_run": "将zip压缩包解压至任意位置，运行Vitamins.exe即可启动本程序。"
    },
    "req": {
        "title": "使用需求",
        "hardware": {
            "title": "硬件",
            "p1_follow_types": "Vitamins 目前支持以下种类的捕捉输入。",
            "bq1_onios": "IOS设备的面捕依赖于深感摄像头工作。在Iphone X及之后的所有Iphone设备都安装了此硬件，第三代 ipad pro及之后的Ipad设备也一样具备此功能。",
            "p2_ios_tech": "深感摄像头的技术是经历过多次升级的，所以你或许会发现，在更高代数的设备上，追踪效果会更好。",
            "bq2_rtx": "需要2060及之后的RTX显卡，仅在Nvidia显卡上可用。需要安装"
        },
        "software": {
            "title": "软件需求",
            "p1_render": "Vitamins 本身并不具备渲染输出的能力，模型的渲染和显示需要依赖额外的软件完成，目前仅支持Vtube Studio.",
            "p2_firewall": "Vitamins依赖本地网络与捕捉设备及渲染软件通信，如果在使用过程中出现防火墙提示，请点击允许。"
        }
    },
    "t_use": "使用",
    "example": {
        "title": "示例",
        "t1_withVTS": "与VTS一起使用",
        "t2_connectios": "连接到IOS端VTS",
        "li_samelan": "将运行Vitamins 的电脑与 运行Vtube Studio 的IOS 设备接入同一局域网内。（如果你在使用学校或公司网络，很可能会出现链接问题，这种情况下推荐使用手机热点、路由器等方式确保软件处在同一局域网下）。",
        "li_startios": "启动IOS 上的 Vtube Studio，并在设置页面，打开最下方的 3rd Party PC Clients 。点击 '显示IP' 记录下ip地址。",
        "li_firstIndi": "点击Vitamins 左上角的第一个指示灯，填入Ios设备的ip地址。然后点击连接。注意，如果有多个软件或设备同时连接至IOS VTS，可能会出现连接缓慢、卡顿的情况。",
        "li_connected": "如果连接成功，你会看到指示灯变绿",
        "t_connectpcVTS": "连接到PC端VTS",
        "li_start": "启动VTS ，并打开插件。",
        "li_secIndi": "点击Vitamins左上角第二个指示灯，填入VTS 插件端口号，或直接点击连接，Vitamins会自动寻找并连接所有打开插件端口的VTS实例。",
        "li_clickallow": "在VTS内点击允许",
        "li_connsecc": "如果连接成功，你会看到指示灯变绿。且在连接面板内出现所有已连接的VTS端口号，你可以右键它进行管理。",
        "p_prefix": "至此连接已经完成了，但是你可能会发现你的模型表现有些不理想。这是因为您还未对您的脸进行校准，在Vitamins里，我称之为",
        "a_prefix": "前处理"
    }
}