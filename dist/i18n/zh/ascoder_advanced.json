{
    "title": "进阶",
    "t_order": "计算顺序",
    "p_toptobot": "Vitamins每帧自上而下的对所有参数完成一次计算，且总会在完成一个参数的计算后再进行下一个。",
    "p_adjust": "你可以通过按住shift键拖动参数卡片进行手动排序调整计算顺序。",
    "t_ref": "引用其他参数的计算结果",
    "p_objref": "在Vitamins里，有一个所有参数都可以访问到的对象ref，里面存储着所有参数的计算结果,你可以用ref. 加上你想使用的参数名获取计算值。",
    "p_note": "注意，ref是受计算顺序影响的，如果你在一个参数计算完成前就调用它，那么将会取到上一帧的计算结果。",
    "p_however": "但也可以利用这个特性，ref自己获得上一帧的值进行计算。",
    "p_119": "这个示例视频里，将当前的值与上一帧的值，按1:19的比例混合，将会得到一个转头时身体缓动的效果。可以通过增加或减少比例控制缓动程度。",
    "t_storage": "存储变量",
    "p_class": "每一个参数在Vitamins里都是一个单独的类，因此你可以利用类的属性在每一帧间存储变量。",
    "p_count": "假设你需要记录计算执行的次数，你可以用”this.count“声明或使用类成员”count“。为了避免每一次计算都重新声明”count“，可以通过判断”this.count“是否等于”undefined“，检查是否已经在之前完成了声明。",
    "t_vplugin": "vPlugin",
    "p_builtin": "Vitamins 以插件的形式内置了一些快捷操作，目前包括",
    "li_vts": "vPlugin.vts 用于获取vts内的参数",
    "li_sods": "vPlugin.SecondOrderSystem 用于构建和计算二阶系统",
    "p_next": "这俩个对象的使用会在下一节'示例'里演示。",
    "t_usevts": "使用VTS参数",
    "p_fetch": "在设置里启用 获取VTS参数 选项后，你将可以使用VTS的 输入参数 的值加入计算。",
    "p_access": "你可以通过vPlugin.vts.defaultParam和vPlugin.vts.customParam 获取vts默认参数和由Vitamins或其他插件添加的自定义参数。"
}